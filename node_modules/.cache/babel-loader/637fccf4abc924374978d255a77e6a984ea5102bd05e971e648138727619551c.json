{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\qlttsv\\\\src\\\\StudentManagementForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as XLSX from 'xlsx';\nimport './StudentManagementForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentManagementForm = () => {\n  _s();\n  const [selectedStudents, setSelectedStudents] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectedStudentInfo, setSelectedStudentInfo] = useState(null);\n  useEffect(() => {\n    fetch('https://example.com/api/students').then(response => response.json()).then(data => setStudents(data)).catch(error => console.error('Error fetching students:', error));\n  }, []);\n  const handleStudentSelection = studentId => {\n    const updatedStudents = selectedStudents.includes(studentId) ? selectedStudents.filter(id => id !== studentId) : [...selectedStudents, studentId];\n    setSelectedStudents(updatedStudents);\n\n    // Hiển thị thông tin chi tiết khi chọn sinh viên\n    const selectedStudent = students.find(s => s.id === studentId);\n    setSelectedStudentInfo(selectedStudent);\n  };\n  const handleExportExcel = () => {\n    const data = selectedStudents.map(studentId => {\n      const student = students.find(s => s.id === studentId);\n      return {\n        StudentName: student.name,\n        StudentId: student.id,\n        Grade: student.grade\n      };\n    });\n    const ws = XLSX.utils.json_to_sheet(data);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'SelectedStudents');\n    XLSX.writeFile(wb, 'selected_students.xlsx');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-management-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"QU\\u1EA2N L\\xCD SINH VI\\xCAN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"students-list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: students.map(student => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedStudents.includes(student.id),\n            onChange: () => handleStudentSelection(student.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: student.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), \" - \\u0110i\\u1EC3m: \", student.grade]\n        }, student.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"selected-student-info\",\n      children: selectedStudentInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Th\\xF4ng Tin Chi Ti\\u1EBFt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID: \", selectedStudentInfo.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"MSSV: \", selectedStudentInfo.mssv]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"export-section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportExcel,\n        children: \"Xu\\u1EA5t Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentManagementForm, \"ZNaYmPwZui5y2uGi7+SJ5jgpHIQ=\");\n_c = StudentManagementForm;\nexport default StudentManagementForm;\nvar _c;\n$RefreshReg$(_c, \"StudentManagementForm\");","map":{"version":3,"names":["React","useState","useEffect","XLSX","jsxDEV","_jsxDEV","StudentManagementForm","_s","selectedStudents","setSelectedStudents","students","setStudents","selectedStudentInfo","setSelectedStudentInfo","fetch","then","response","json","data","catch","error","console","handleStudentSelection","studentId","updatedStudents","includes","filter","id","selectedStudent","find","s","handleExportExcel","map","student","StudentName","name","StudentId","Grade","grade","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","mssv","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/qlttsv/src/StudentManagementForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport './StudentManagementForm.css';\r\n\r\nconst StudentManagementForm = () => {\r\n  const [selectedStudents, setSelectedStudents] = useState([]);\r\n  const [students, setStudents] = useState([]);\r\n  const [selectedStudentInfo, setSelectedStudentInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch('https://example.com/api/students')\r\n      .then(response => response.json())\r\n      .then(data => setStudents(data))\r\n      .catch(error => console.error('Error fetching students:', error));\r\n  }, []);\r\n\r\n  const handleStudentSelection = (studentId) => {\r\n    const updatedStudents = selectedStudents.includes(studentId)\r\n      ? selectedStudents.filter((id) => id !== studentId)\r\n      : [...selectedStudents, studentId];\r\n\r\n    setSelectedStudents(updatedStudents);\r\n\r\n    // Hiển thị thông tin chi tiết khi chọn sinh viên\r\n    const selectedStudent = students.find((s) => s.id === studentId);\r\n    setSelectedStudentInfo(selectedStudent);\r\n  };\r\n\r\n  const handleExportExcel = () => {\r\n    const data = selectedStudents.map((studentId) => {\r\n      const student = students.find((s) => s.id === studentId);\r\n      return { StudentName: student.name, StudentId: student.id, Grade: student.grade };\r\n    });\r\n\r\n    const ws = XLSX.utils.json_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, 'SelectedStudents');\r\n    XLSX.writeFile(wb, 'selected_students.xlsx');\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-management-form\">\r\n      <h2>QUẢN LÍ SINH VIÊN</h2>\r\n\r\n      <section className=\"students-list\">\r\n        <ul>\r\n          {students.map((student) => (\r\n            <li key={student.id}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedStudents.includes(student.id)}\r\n                onChange={() => handleStudentSelection(student.id)}\r\n              />\r\n              <span>{student.name}</span> - Điểm: {student.grade}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n\r\n      <section className=\"selected-student-info\">\r\n        {selectedStudentInfo && (\r\n          <div>\r\n            <h3>Thông Tin Chi Tiết</h3>\r\n            <p>ID: {selectedStudentInfo.id}</p>\r\n            <p>MSSV: {selectedStudentInfo.mssv}</p>\r\n            {/* Thêm thông tin khác cần hiển thị */}\r\n          </div>\r\n        )}\r\n      </section>\r\n\r\n      <section className=\"export-section\">\r\n        <button onClick={handleExportExcel}>Xuất Excel</button>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentManagementForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}