{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\qlttsv\\\\src\\\\StudentManagementForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentManagementForm = () => {\n  _s();\n  const [selectedStudents, setSelectedStudents] = useState([]);\n  const students = /* Dữ liệu sinh viên, có thể fetch từ API hoặc sử dụng state từ component cha */[];\n  const handleStudentSelection = studentId => {\n    const updatedStudents = selectedStudents.includes(studentId) ? selectedStudents.filter(id => id !== studentId) : [...selectedStudents, studentId];\n    setSelectedStudents(updatedStudents);\n  };\n  const handleExportExcel = () => {\n    const data = selectedStudents.map(studentId => {\n      const student = students.find(s => s.id === studentId);\n      return {\n        StudentName: student.name,\n        StudentId: student.id /* thêm các trường thông tin khác nếu cần */\n      };\n    });\n\n    const ws = XLSX.utils.json_to_sheet(data);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'SelectedStudents');\n    XLSX.writeFile(wb, 'selected_students.xlsx');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Qu\\u1EA3n l\\xFD sinh vi\\xEAn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: students.map(student => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedStudents.includes(student.id),\n          onChange: () => handleStudentSelection(student.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), student.name, \" - \\u0110i\\u1EC3m: \", student.grade]\n      }, student.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExportExcel,\n      children: \"Xu\\u1EA5t Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentManagementForm, \"auKVHB9s8OezcfalAGaJZWue4ds=\");\n_c = StudentManagementForm;\nexport default StudentManagementForm;\nvar _c;\n$RefreshReg$(_c, \"StudentManagementForm\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","StudentManagementForm","_s","selectedStudents","setSelectedStudents","students","handleStudentSelection","studentId","updatedStudents","includes","filter","id","handleExportExcel","data","map","student","find","s","StudentName","name","StudentId","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","grade","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/qlttsv/src/StudentManagementForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst StudentManagementForm = () => {\r\n  const [selectedStudents, setSelectedStudents] = useState([]);\r\n  const students = /* Dữ liệu sinh viên, có thể fetch từ API hoặc sử dụng state từ component cha */ [];\r\n\r\n  const handleStudentSelection = (studentId) => {\r\n    const updatedStudents = selectedStudents.includes(studentId)\r\n      ? selectedStudents.filter((id) => id !== studentId)\r\n      : [...selectedStudents, studentId];\r\n\r\n    setSelectedStudents(updatedStudents);\r\n  };\r\n\r\n  const handleExportExcel = () => {\r\n    const data = selectedStudents.map((studentId) => {\r\n      const student = students.find((s) => s.id === studentId);\r\n      return { StudentName: student.name, StudentId: student.id, /* thêm các trường thông tin khác nếu cần */ };\r\n    });\r\n\r\n    const ws = XLSX.utils.json_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, 'SelectedStudents');\r\n    XLSX.writeFile(wb, 'selected_students.xlsx');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Quản lý sinh viên</h2>\r\n      <ul>\r\n        {students.map((student) => (\r\n          <li key={student.id}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={selectedStudents.includes(student.id)}\r\n              onChange={() => handleStudentSelection(student.id)}\r\n            />\r\n            {student.name} - Điểm: {student.grade}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={handleExportExcel}>Xuất Excel</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentManagementForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAMQ,QAAQ,GAAG,gFAAiF,EAAE;EAEpG,MAAMC,sBAAsB,GAAIC,SAAS,IAAK;IAC5C,MAAMC,eAAe,GAAGL,gBAAgB,CAACM,QAAQ,CAACF,SAAS,CAAC,GACxDJ,gBAAgB,CAACO,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAKJ,SAAS,CAAC,GACjD,CAAC,GAAGJ,gBAAgB,EAAEI,SAAS,CAAC;IAEpCH,mBAAmB,CAACI,eAAe,CAAC;EACtC,CAAC;EAED,MAAMI,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,IAAI,GAAGV,gBAAgB,CAACW,GAAG,CAAEP,SAAS,IAAK;MAC/C,MAAMQ,OAAO,GAAGV,QAAQ,CAACW,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACN,EAAE,KAAKJ,SAAS,CAAC;MACxD,OAAO;QAAEW,WAAW,EAAEH,OAAO,CAACI,IAAI;QAAEC,SAAS,EAAEL,OAAO,CAACJ,EAAE,CAAE;MAA6C,CAAC;IAC3G,CAAC,CAAC;;IAEF,MAAMU,EAAE,GAAGvB,IAAI,CAACwB,KAAK,CAACC,aAAa,CAACV,IAAI,CAAC;IACzC,MAAMW,EAAE,GAAG1B,IAAI,CAACwB,KAAK,CAACG,QAAQ,CAAC,CAAC;IAChC3B,IAAI,CAACwB,KAAK,CAACI,iBAAiB,CAACF,EAAE,EAAEH,EAAE,EAAE,kBAAkB,CAAC;IACxDvB,IAAI,CAAC6B,SAAS,CAACH,EAAE,EAAE,wBAAwB,CAAC;EAC9C,CAAC;EAED,oBACExB,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BhC,OAAA;MAAA4B,QAAA,EACGvB,QAAQ,CAACS,GAAG,CAAEC,OAAO,iBACpBf,OAAA;QAAA4B,QAAA,gBACE5B,OAAA;UACEiC,IAAI,EAAC,UAAU;UACfC,OAAO,EAAE/B,gBAAgB,CAACM,QAAQ,CAACM,OAAO,CAACJ,EAAE,CAAE;UAC/CwB,QAAQ,EAAEA,CAAA,KAAM7B,sBAAsB,CAACS,OAAO,CAACJ,EAAE;QAAE;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC,EACDjB,OAAO,CAACI,IAAI,EAAC,qBAAS,EAACJ,OAAO,CAACqB,KAAK;MAAA,GAN9BrB,OAAO,CAACJ,EAAE;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLhC,OAAA;MAAQqC,OAAO,EAAEzB,iBAAkB;MAAAgB,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA1CID,qBAAqB;AAAAqC,EAAA,GAArBrC,qBAAqB;AA4C3B,eAAeA,qBAAqB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}