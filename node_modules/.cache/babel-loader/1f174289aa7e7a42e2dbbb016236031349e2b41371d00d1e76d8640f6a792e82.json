{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\qlttsv\\\\src\\\\StudentManagementForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as XLSX from 'xlsx';\nimport './StudentManagementForm.css'; // Import file CSS cho form\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentManagementForm = () => {\n  _s();\n  const [selectedStudents, setSelectedStudents] = useState([]);\n  const [students, setStudents] = useState([]);\n  useEffect(() => {\n    fetch('https://example.com/api/students').then(response => response.json()).then(data => setStudents(data)).catch(error => console.error('Error fetching students:', error));\n  }, []);\n  const handleStudentSelection = studentId => {\n    const updatedStudents = selectedStudents.includes(studentId) ? selectedStudents.filter(id => id !== studentId) : [...selectedStudents, studentId];\n    setSelectedStudents(updatedStudents);\n  };\n  const handleExportExcel = () => {\n    const data = selectedStudents.map(studentId => {\n      const student = students.find(s => s.id === studentId);\n      return {\n        StudentName: student.name,\n        StudentId: student.id,\n        Grade: student.grade\n      };\n    });\n    const ws = XLSX.utils.json_to_sheet(data);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'SelectedStudents');\n    XLSX.writeFile(wb, 'selected_students.xlsx');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-management-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Qu\\u1EA3n l\\xFD sinh vi\\xEAn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: students.map(student => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedStudents.includes(student.id),\n          onChange: () => handleStudentSelection(student.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: student.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), \" - \\u0110i\\u1EC3m: \", student.grade]\n      }, student.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExportExcel,\n      children: \"Xu\\u1EA5t Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentManagementForm, \"eSSxXUkvBWrs+KvBuQGxafghRAM=\");\n_c = StudentManagementForm;\nexport default StudentManagementForm;\nvar _c;\n$RefreshReg$(_c, \"StudentManagementForm\");","map":{"version":3,"names":["React","useState","useEffect","XLSX","jsxDEV","_jsxDEV","StudentManagementForm","_s","selectedStudents","setSelectedStudents","students","setStudents","fetch","then","response","json","data","catch","error","console","handleStudentSelection","studentId","updatedStudents","includes","filter","id","handleExportExcel","map","student","find","s","StudentName","name","StudentId","Grade","grade","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/qlttsv/src/StudentManagementForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport './StudentManagementForm.css'; // Import file CSS cho form\r\n\r\nconst StudentManagementForm = () => {\r\n  const [selectedStudents, setSelectedStudents] = useState([]);\r\n  const [students, setStudents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://example.com/api/students')\r\n      .then(response => response.json())\r\n      .then(data => setStudents(data))\r\n      .catch(error => console.error('Error fetching students:', error));\r\n  }, []);\r\n\r\n  const handleStudentSelection = (studentId) => {\r\n    const updatedStudents = selectedStudents.includes(studentId)\r\n      ? selectedStudents.filter((id) => id !== studentId)\r\n      : [...selectedStudents, studentId];\r\n\r\n    setSelectedStudents(updatedStudents);\r\n  };\r\n\r\n  const handleExportExcel = () => {\r\n    const data = selectedStudents.map((studentId) => {\r\n      const student = students.find((s) => s.id === studentId);\r\n      return { StudentName: student.name, StudentId: student.id, Grade: student.grade };\r\n    });\r\n\r\n    const ws = XLSX.utils.json_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, 'SelectedStudents');\r\n    XLSX.writeFile(wb, 'selected_students.xlsx');\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-management-form\">\r\n      <h2>Quản lý sinh viên</h2>\r\n      <ul>\r\n        {students.map((student) => (\r\n          <li key={student.id}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={selectedStudents.includes(student.id)}\r\n              onChange={() => handleStudentSelection(student.id)}\r\n            />\r\n            <span>{student.name}</span> - Điểm: {student.grade}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={handleExportExcel}>Xuất Excel</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentManagementForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}