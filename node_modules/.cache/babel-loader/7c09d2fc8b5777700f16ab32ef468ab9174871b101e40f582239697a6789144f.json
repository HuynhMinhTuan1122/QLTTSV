{"ast":null,"code":"var _jsxFileName = \"D:\\\\QLTTSV\\\\QLTTSV\\\\src\\\\StudentManagementForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport './StudentManagementForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentManagementForm = () => {\n  _s();\n  const [selectedStudents, setSelectedStudents] = useState([]);\n  const [students, setStudents] = useState([{\n    id: 2001200218,\n    name: 'Nguyễn Văn A',\n    grade: 8.5\n  }, {\n    id: 2001200219,\n    name: 'Trần Thị B',\n    grade: 7.2\n  }]);\n  const [interviewList, setInterviewList] = useState([]);\n  const handleStudentSelection = studentId => {\n    const updatedStudents = selectedStudents.includes(studentId) ? selectedStudents.filter(id => id !== studentId) : [...selectedStudents, studentId];\n    setSelectedStudents(updatedStudents);\n  };\n  const handleExportExcel = () => {\n    const data = interviewList.map(studentId => {\n      const student = students.find(s => s.id === studentId);\n      return {\n        StudentName: student.name,\n        StudentId: student.id,\n        Grade: student.grade\n      };\n    });\n    const ws = XLSX.utils.json_to_sheet(data);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'InterviewedStudents');\n    XLSX.writeFile(wb, 'interviewed_students.xlsx');\n  };\n  const handleInterviewSelection = () => {\n    setInterviewList([...selectedStudents]);\n    setSelectedStudents([]);\n  };\n  const handleRevokeInterview = studentId => {\n    const updatedInterviewList = interviewList.filter(id => id !== studentId);\n    setInterviewList(updatedInterviewList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-management-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"QU\\u1EA2N L\\xDD SINH VI\\xCAN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"T\\xEAn Sinh Vi\\xEAn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"M\\xE3 Sinh Vi\\xEAn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0110i\\u1EC3m\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: students.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedStudents.includes(student.id),\n              onChange: () => handleStudentSelection(student.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.grade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, student.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExportExcel,\n      children: \"Xu\\u1EA5t Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleInterviewSelection,\n      children: \"Ch\\u1ECDn Ph\\u1ECFng V\\u1EA5n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interview-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"DANH S\\xC1CH SINH VI\\xCAN \\u0110\\u01AF\\u1EE2C CH\\u1ECCN PH\\u1ECENG V\\u1EA4N\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 3\n      }, this), interviewList.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"interview-list\",\n        children: interviewList.map(studentId => {\n          const student = students.find(s => s.id === studentId);\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"interview-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"student-info\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"student-name\",\n                children: student.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRevokeInterview(studentId),\n              children: \"Thu H\\u1ED3i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 13\n            }, this)]\n          }, studentId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ch\\u01B0a c\\xF3 sinh vi\\xEAn n\\xE0o \\u0111\\u01B0\\u1EE3c ch\\u1ECDn ph\\u1ECFng v\\u1EA5n.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentManagementForm, \"NPLZ9ff43XZJWhL4X6N/srtrhu4=\");\n_c = StudentManagementForm;\nexport default StudentManagementForm;\nvar _c;\n$RefreshReg$(_c, \"StudentManagementForm\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","StudentManagementForm","_s","selectedStudents","setSelectedStudents","students","setStudents","id","name","grade","interviewList","setInterviewList","handleStudentSelection","studentId","updatedStudents","includes","filter","handleExportExcel","data","map","student","find","s","StudentName","StudentId","Grade","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","handleInterviewSelection","handleRevokeInterview","updatedInterviewList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","onClick","length","_c","$RefreshReg$"],"sources":["D:/QLTTSV/QLTTSV/src/StudentManagementForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport './StudentManagementForm.css';\r\n\r\nconst StudentManagementForm = () => {\r\n  const [selectedStudents, setSelectedStudents] = useState([]);\r\n  const [students, setStudents] = useState([\r\n    { id: 2001200218, name: 'Nguyễn Văn A', grade: 8.5 },\r\n    { id: 2001200219, name: 'Trần Thị B', grade: 7.2 },\r\n  ]);\r\n  const [interviewList, setInterviewList] = useState([]);\r\n\r\n  const handleStudentSelection = (studentId) => {\r\n    const updatedStudents = selectedStudents.includes(studentId)\r\n      ? selectedStudents.filter((id) => id !== studentId)\r\n      : [...selectedStudents, studentId];\r\n\r\n    setSelectedStudents(updatedStudents);\r\n  };\r\n\r\n  const handleExportExcel = () => {\r\n    const data = interviewList.map((studentId) => {\r\n      const student = students.find((s) => s.id === studentId);\r\n      return { StudentName: student.name, StudentId: student.id, Grade: student.grade };\r\n    });\r\n\r\n    const ws = XLSX.utils.json_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, 'InterviewedStudents');\r\n    XLSX.writeFile(wb, 'interviewed_students.xlsx');\r\n  };\r\n\r\n  const handleInterviewSelection = () => {\r\n    setInterviewList([...selectedStudents]);\r\n    setSelectedStudents([]);\r\n  };\r\n\r\n  const handleRevokeInterview = (studentId) => {\r\n    const updatedInterviewList = interviewList.filter((id) => id !== studentId);\r\n    setInterviewList(updatedInterviewList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-management-form\">\r\n      <h2>QUẢN LÝ SINH VIÊN</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th></th>\r\n            <th>Tên Sinh Viên</th>\r\n            <th>Mã Sinh Viên</th>\r\n            <th>Điểm</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {students.map((student) => (\r\n            <tr key={student.id}>\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selectedStudents.includes(student.id)}\r\n                  onChange={() => handleStudentSelection(student.id)}\r\n                />\r\n              </td>\r\n              <td>{student.name}</td>\r\n              <td>{student.id}</td>\r\n              <td>{student.grade}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <button onClick={handleExportExcel}>Xuất Excel</button>\r\n      <button onClick={handleInterviewSelection}>Chọn Phỏng Vấn</button>\r\n      <div className=\"interview-section\">\r\n  <h3>DANH SÁCH SINH VIÊN ĐƯỢC CHỌN PHỎNG VẤN</h3>\r\n  {interviewList.length > 0 ? (\r\n    <ul className=\"interview-list\">\r\n      {interviewList.map((studentId) => {\r\n        const student = students.find((s) => s.id === studentId);\r\n        return (\r\n          <li key={studentId} className=\"interview-item\">\r\n            <div className=\"student-info\">\r\n              <div className=\"student-name\">{student.name}</div>             \r\n            </div>\r\n            <button onClick={() => handleRevokeInterview(studentId)}>Thu Hồi</button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  ) : (\r\n    <p>Chưa có sinh viên nào được chọn phỏng vấn.</p>\r\n  )}\r\n</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentManagementForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}