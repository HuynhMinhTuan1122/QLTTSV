{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\qlttsv\\\\src\\\\StudentManagementForm.js\",\n  _s = $RefreshSig$();\n// StudentManagementForm.js\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport './StudentManagementForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fakeStudentsData = [{\n  id: 1,\n  mssv: '20012005556',\n  name: 'Nguyen Van A',\n  grade: 8.5\n}, {\n  id: 2,\n  mssv: '20012002555',\n  name: 'Tran Thi B',\n  grade: 7.9\n}];\nconst StudentList = ({\n  students,\n  selectedStudents,\n  onSelectStudent\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Danh S\\xE1ch Sinh Vi\\xEAn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: students.map(student => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => onSelectStudent(student),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedStudents.includes(student.id),\n          onChange: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: student.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), \" - \\u0110i\\u1EC3m: \", student.grade]\n      }, student.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = StudentList;\nconst StudentDetail = ({\n  selectedStudentInfo\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Th\\xF4ng Tin Chi Ti\\u1EBFt Sinh Vi\\xEAn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), selectedStudentInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"MSSV: \", selectedStudentInfo.mssv]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"T\\xEAn: \", selectedStudentInfo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0110i\\u1EC3m: \", selectedStudentInfo.grade]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c2 = StudentDetail;\nconst StudentManagementForm = () => {\n  _s();\n  const [selectedStudents, setSelectedStudents] = useState([]);\n  const [students, setStudents] = useState(fakeStudentsData);\n  const [selectedStudentInfo, setSelectedStudentInfo] = useState(null);\n  const handleSelectStudent = student => {\n    setSelectedStudentInfo(student);\n  };\n  const handleExportExcel = () => {\n    if (selectedStudents.length > 0 && students.length > 0) {\n      const selectedStudentsData = students.filter(student => selectedStudents.includes(student.id));\n      if (selectedStudentsData.length > 0) {\n        const ws = XLSX.utils.json_to_sheet(selectedStudentsData);\n        const wb = XLSX.utils.book_new();\n        XLSX.utils.book_append_sheet(wb, ws, 'SelectedStudents');\n        const excelFileName = 'selected_students.xlsx';\n        XLSX.writeFile(wb, excelFileName);\n      } else {\n        console.error('Không có dữ liệu để xuất Excel.');\n      }\n    } else {\n      console.error('Dữ liệu không đủ để xuất Excel.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-management-form\",\n    children: [/*#__PURE__*/_jsxDEV(StudentList, {\n      students: students,\n      selectedStudents: selectedStudents,\n      onSelectStudent: handleSelectStudent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StudentDetail, {\n      selectedStudentInfo: selectedStudentInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExportExcel,\n      children: \"Xu\\u1EA5t Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentManagementForm, \"pjYwP9rZEjX1wfc7VPSe4WT3CwQ=\");\n_c3 = StudentManagementForm;\nexport default StudentManagementForm;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StudentList\");\n$RefreshReg$(_c2, \"StudentDetail\");\n$RefreshReg$(_c3, \"StudentManagementForm\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","fakeStudentsData","id","mssv","name","grade","StudentList","students","selectedStudents","onSelectStudent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","student","onClick","type","checked","includes","onChange","_c","StudentDetail","selectedStudentInfo","_c2","StudentManagementForm","_s","setSelectedStudents","setStudents","setSelectedStudentInfo","handleSelectStudent","handleExportExcel","length","selectedStudentsData","filter","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","excelFileName","writeFile","console","error","_c3","$RefreshReg$"],"sources":["C:/Users/LENOVO/qlttsv/src/StudentManagementForm.js"],"sourcesContent":["// StudentManagementForm.js\r\nimport React, { useState } from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport './StudentManagementForm.css';\r\n\r\nconst fakeStudentsData = [\r\n  { id: 1, mssv: '20012005556', name: 'Nguyen Van A', grade: 8.5 },\r\n  { id: 2, mssv: '20012002555', name: 'Tran Thi B', grade: 7.9 },\r\n];\r\n\r\nconst StudentList = ({ students, selectedStudents, onSelectStudent }) => {\r\n  return (\r\n    <div className=\"student-list\">\r\n      <h2>Danh Sách Sinh Viên</h2>\r\n      <ul>\r\n        {students.map((student) => (\r\n          <li key={student.id} onClick={() => onSelectStudent(student)}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={selectedStudents.includes(student.id)}\r\n              onChange={() => {}}\r\n            />\r\n            <span>{student.name}</span> - Điểm: {student.grade}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StudentDetail = ({ selectedStudentInfo }) => {\r\n  return (\r\n    <div className=\"student-detail\">\r\n      <h2>Thông Tin Chi Tiết Sinh Viên</h2>\r\n      {selectedStudentInfo && (\r\n        <div>\r\n          <p>MSSV: {selectedStudentInfo.mssv}</p>\r\n          <p>Tên: {selectedStudentInfo.name}</p>\r\n          <p>Điểm: {selectedStudentInfo.grade}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StudentManagementForm = () => {\r\n  const [selectedStudents, setSelectedStudents] = useState([]);\r\n  const [students, setStudents] = useState(fakeStudentsData);\r\n  const [selectedStudentInfo, setSelectedStudentInfo] = useState(null);\r\n\r\n  const handleSelectStudent = (student) => {\r\n    setSelectedStudentInfo(student);\r\n  };\r\n\r\n  const handleExportExcel = () => {\r\n    if (selectedStudents.length > 0 && students.length > 0) {\r\n      const selectedStudentsData = students.filter((student) =>\r\n        selectedStudents.includes(student.id)\r\n      );\r\n\r\n      if (selectedStudentsData.length > 0) {\r\n        const ws = XLSX.utils.json_to_sheet(selectedStudentsData);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, 'SelectedStudents');\r\n        const excelFileName = 'selected_students.xlsx';\r\n        XLSX.writeFile(wb, excelFileName);\r\n      } else {\r\n        console.error('Không có dữ liệu để xuất Excel.');\r\n      }\r\n    } else {\r\n      console.error('Dữ liệu không đủ để xuất Excel.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-management-form\">\r\n      <StudentList\r\n        students={students}\r\n        selectedStudents={selectedStudents}\r\n        onSelectStudent={handleSelectStudent}\r\n      />\r\n      <StudentDetail selectedStudentInfo={selectedStudentInfo} />\r\n      <button onClick={handleExportExcel}>Xuất Excel</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentManagementForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}